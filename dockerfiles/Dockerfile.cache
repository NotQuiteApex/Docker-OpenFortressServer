# syntax=docker/dockerfile:1
# Base image file, separate because SteamCMD, TF2, etc. do not update very often.
FROM steamcmd/steamcmd:latest

# Copy everything in.
WORKDIR /root/.steam/
ADD ./scripts/* ./

# Some dependencies to download.
RUN dpkg --add-architecture i386 && apt-get update && apt-get install -y \
	lib32gcc-s1 libstdc++6 libstdc++6:i386 libncurses5:i386 libtinfo5:i386 \
	libcurl4-gnutls-dev:i386 curl
# Install murse. This downloads Open Fortress for us.
RUN curl -L https://dl.spiderden.net/murse/linux -o murse && chmod +x ./murse

# Install TF2 and SDK
RUN steamcmd +runscript ./tf2sdk-update.txt
# Symlink binaries
RUN cd ./sdk/bin/ && \
	ln -s datacache_srv.so datacache.so && \
	ln -s dedicated_srv.so dedicated.so && \
	ln -s engine_srv.so engine.so && \
	ln -s materialsystem_srv.so materialsystem.so && \
	ln -s replay_srv.so replay.so && \
	ln -s scenefilecache_srv.so scenefilecache.so && \
	ln -s shaderapiempty_srv.so shaderapiempty.so && \
	ln -s soundemittersystem_srv.so soundemittersystem.so && \
	ln -s studiorender_srv.so studiorender.so && \
	ln -s vphysics_srv.so vphysics.so

# Download Open Fortress.
RUN ./of-update.sh

# Symlink binary
RUN cd ./sdk/open_fortress/bin/ && \
	ln -s server.so server_srv.so

# Insert server config and start script defined in scripts.
RUN mv -f ./server.cfg ./sdk/open_fortress/cfg/
RUN mv -f ./autoexec.cfg ./sdk/open_fortress/cfg/

# Lastly, set the entrypoint to be the run.sh script
ENTRYPOINT [ "bash" ]
CMD [ "/root/.steam/steamcmd/run.sh" ]

# Expose the SRCDS port. Purely for the -P cli argument.
# People who run the container will still need to route the port themselves.
EXPOSE 27005/tcp
EXPOSE 27005/udp
EXPOSE 27015/tcp
EXPOSE 27015/udp
